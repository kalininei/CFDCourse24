1. Сборка
=========

1.1 Windows, VisualStudio
-------------------------
1 установить git
  https://github.com/git-for-windows/git/releases/download/v2.38.1.windows.1/Git-2.38.1-64-bit.exe

2 установить cmake версии выше 3.0
  https://github.com/Kitware/CMake/releases/download/v3.24.2/cmake-3.24.2-windows-x86_64.msi
  Нужно, чтобы cmake.exe был в системных путях. Если ставить через msi, он об этом спросит при установке.

3 создать папку в системе для репозиториев. Например D:/git_repos/

4 запустить консоль git bash

5 в консоли перейти на созданную папку. Например
  > cd D:/git_repos

6 клонировать репозиторий
  > git clone https://github.com/kalininei/CFDCourse24
  В директории (D:/git_repos в примере) появится папка CFDCourse24, которая является корневой папкой проекта

7 взять необходимые заголовочные библиотеки boost из https://disk.yandex.ru/d/GwTZUvfAqPsZBQ
  и распаковать её рядом с папкой директории CFDCourse23. Чтобы рядом с этой папкой лежала непосредственно пака boost

8 cоздать папку build в корне проекта

9 скопировать скрипт winbuild64.bat в папку build. Далее вносить изменения
  только в скопированном файле.

10 скрипт написан для версии Visual Studio 2019. Если используется другая версия,
   изменить в скрипте значение переменной CMGenerator на соответствующие вашей версии.
   Значения для разных версий Visual Studio написаны ниже

SET CMGenerator="Visual Studio 17 2022"
SET CMGenerator="Visual Studio 16 2019"
SET CMGenerator="Visual Studio 15 2017"
SET CMGenerator="Visual Studio 14 2015"

11 запустить скрипт winbuild64.bat из папки build. Нужен доступ к интернету.
   В процессе будет скачано около 200Мб пакетов, поэтому первый запуск может занять время

12 После сборки в папке build появится проект VisualStudio cfd24.sln
   Сборка бинарных файлов будет осуществлятся в папку build/bin.
   Выходные файлы при использовании функции from_output_path будут писаться в build/bin


1.2 VSCode, windows
-------------------
Повторить шаги 1-7 из п 1.1

8. Открыть корневую папку проека через File->Open Folder
9. Установить предлагаемые расширения cmake, c++


1.3 Linux, GCC
--------------
- в консоли
mkdir build
cd build
cmake ..
make
- программы соберутся в папку build/bin
